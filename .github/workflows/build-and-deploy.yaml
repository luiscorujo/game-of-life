name: WASM Build, Test, Deploy

permissions: {}

on:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        # Use workspace target directory for cargo install's build,
        # so that the build of wasm-pack will be cached by rust-cache action.
        run: CARGO_TARGET_DIR=`pwd`/target cargo install wasm-pack

      - name: Run wasm-pack build
        run : cd www && wasm-pack build --out-dir www/pkg

      - name: NPM install (latest)
        run: cd www && npm install npm@latest

      - name: Run Cargo tests
        run: cargo test --workspace

      - name: NPM (including WASM) Build
        run: cd www && npm run build

      - name: Copy css file to dist
        run: cd www && cp index.css dist/index.css

      # Save wasm build so that we can optionally deploy it without rebuilding
      - name: Save wasm dist artifact
        uses: actions/upload-artifact@v3
        with:
          name: www-dist
          path: www/dist
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download wasm dist artifact
        uses: actions/download-artifact@v3
        with:
          name: www-dist
          path: dist-for-deploy

      - name: Print working directory
        run: pwd

      - name: Print files in directory
        run: ls

      - name: Print dist-for-deploy files
        run: ls dist-for-deploy

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          repo: luiscorujo/game-of-life
          target_branch: gh-pages
          build_dir: dist-for-deploy
          keep_history: false
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
